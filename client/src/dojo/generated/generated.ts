/* Autogenerated file. Do not edit manually. */

import { Account, AccountInterface } from "starknet";
import { DojoProvider } from "@dojoengine/core";
import { Direction } from "../../utils";

export type IWorld = Awaited<ReturnType<typeof setupWorld>>;

export interface MoveProps {
    account: Account | AccountInterface;
    direction: Direction;
}

export async function setupWorld(provider: DojoProvider) {
    function actions() {
        const contract_name = "actions";

        const spawn = async ({ account }: { account: AccountInterface }) => {
            try {
                return await provider.execute(
                    account,
                    contract_name,
                    "spawn",
                    []
                );
            } catch (error) {
                console.error("Error executing spawn:", error);
                throw error;
            }
        };

        const move = async ({ account, direction }: MoveProps) => {
            try {
                return await provider.execute(account, contract_name, "move", [
                    direction,
                ]);
            } catch (error) {
                console.error("Error executing move:", error);
                throw error;
            }
        };
        return { spawn, move };
    }

    function lobby() {
        const contract_name = "lobby";

        const register_player = async ({
            account,
            name,
            profile_pic,
          }: {
            account: AccountInterface;
            name: string;
            profile_pic: number;
          }) => {
            try {
              return await provider.execute(
                account,
                contract_name,
                "register_player",
                [name, profile_pic]
              );
            } catch (error) {
              console.error("Error executing register_player:", error);
              throw error;
            }
          };
      
          const set_profile_pic = async ({
            account,
            profile_pic,
          }: {
            account: AccountInterface;
            profile_pic: number;
          }) => {
            try {
              return await provider.execute(
                account,
                contract_name,
                "set_profile_pic",
                [profile_pic]
              );
            } catch (error) {
              console.error("Error executing set_profile_pic:", error);
              throw error;
            }
          };

          return { register_player, set_profile_pic };
    }

    return {
        //actions: actions(),
        lobby: lobby(),
    };
}
